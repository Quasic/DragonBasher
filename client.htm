<html><head><title>Dragon Client</title>
<script src="[htmlurl]/jquery-3.7.1.min.js" language="JavaScript"></script>
<script language="JavaScript">

//
// Queville v11.0, Land of the Dragon Basher
// Quintrix and Crew Software
//
// Released as Creative Commons BY-NC, where
// 'non-commercial' includes games created meaning
// games cannot have money, coins, bank notes,
// credits, or any other economic system. See license.txt
//
// http://creativecommons.org/licenses/by-nc/2.0/
//

ShowServer=1;
CVer="v11-1l";//client version string

// Server filesystem structure

ServerPath="/cgi-bin/11-dragon/";
Server="[htmlurl]"+ServerPath+"11-dragon.cgi";
ServerName="11-dragon";

//[configuration]; (Dir...and MapSizeX and Y variable declarations inserted here by 11-dragon.cgi)

// Timers

tick=1000;//target ping in ms
subtick=tick/5;//animation ms between frames
scroll_length=tick;//scroll animation speed
IdleLimit=60000*5;//ms before autologout
timenames={
second:1,
minute:60,
hour:3600,
day:86400,
weekend:259200,
week:605800,
month:2592000,
season:7778000,
quarter:7778000,
year:31104000,
olympiad:124416000,
decade:311040000,
century:3110400000};

// Map

MapSizeX1=MapSizeX+1; // # of tiles across each screen
MapSizeY1=MapSizeY+1; // $ of tiles down each screen
TotalTiles=MapSizeY1*MapSizeX1;

//TopYPos=12;
//TopXPos=16;
TopXPos=2; // X position of map in px
TopYPos=2; // Y position of map in px

</script>
<script src="[htmlurl]/11-gfx/client-itemid.js" language="JavaScript"></script>
<script src="[htmlurl]/11-gfx/client-startscreen.js" language="JavaScript"></script>
<style>
body { margin: 0px 0px 0px 0px; background-color:#006000;color:navy }
#PopUp {
  color: navy;
  position:absolute;
  top:100;
  left:100;
  visibility:visible;
  z-index:254;
}
#fg{position:absolute;top:99;left:228;visibility:hidden;z-index:244;padding: 2px 2px 5px 2px}
#MH{position:absolute;top:0;left:0;visibility:hidden;z-index:255}
a{color:navy}
a:active{color:red}
.builddiv{height:100%}
</style>
</head>
<body bgcolor=006000 text=navy link=navy vlink=navy alink=red ondragstart="return false" onselectstart="return false">
<div background="[htmlurl]/11-gfx/POPUP4.png" id="PopUp" style="background-image:url([htmlurl]/11-gfx/POPUP4.png)" onMouseOver='PopUpVis="visible";AStamp();' onMouseOut='PopUpVis=PopForce; Keyboard=""; PUV=setTimeout("document.getElementById(\"PopUp\").style.visibility=PopUpVis;AStamp();",100);'>&nbsp;</div>
<div id="fg">&nbsp;</div>
<img id=MH name=MH src="[htmlurl]/11-gfx/Cursor.gif">
<noscript><font color="white" style="color:white;background-color:black">Please allow this site to use JavaScript so you can play this game. (This setting is usually in your browser preferences.)</font></noscript>
<script language="JavaScript">

RefRPG=0;

servers=new Array();

SResults=new Array();
token=new Array();
characters={};

statics=new Array();
static0="";
static1="";
static2="";
static3="";
staticitems=["","","",""];
buildings=["","","",""];
items0="";
items1="";
items2="";
items3="";

IStamp=0;
CStamp=0;
function AStamp(){IStamp=+new Date;}
parent.document.body.onmousedown=document.body.onmousedown=AStamp;//function(){IStamp=CStamp;}
parent.document.body.onmouseup=document.body.onmouseup=AStamp;//function(){IStamp=CStamp;}

K=0;
VKey=0;
InputLine="";
KCap=0;
Retreat=0;
ShiftSet=0;
Shifted=0;
ChatLine="";
NewChatLine="";
SendChat="";
SendChatTo=0;
Chatting=0;
Admin=0;
Sysop=0;
scrollmap="";
scrollmap2="";
scrolling="";
loop=0;
ObjClass=0;
Moves="";
Move=1;
Que="";

PopX=0;
PopY=0;
PopZ=0;
PopClick=0;
PopHide="hidden";
PopAlign="center";
PopForce="hidden";

Flag="Quintrix";
LastFlag="";

TileMode=0;
TileFill="";

HittingIt=0;
RMap=0;
RPlayers=0;
RStatic=0;
RItems=0;
RChar=0;
RInven=0;

Map2X=MapSizeX1*32;
Map2Y=MapSizeY1*32;

MoveX=0;
MoveY=0;
MoveZ=0;
MovedZ=0;
ViewWide=MapSizeX1*2; // Width of Viewer
ViewHigh=MapSizeY1*2; // Height of Viewer

CharName="";
CharObj="new";
CharPObj={};
CharMapObj={};
Wearing="";
Bait="";
CharY=5;
CharX=2;
CharZ=0;
CharToken=CharName+"  "+CharObj+" 0-"+CharZ;
CharMap="B2";
StartZ=0;
NumInven=24;
CharInven="Za000000";
CharMuted=false;

//map
zdivs=["builddiv","enemydiv","plyrdiv","itemdiv","sdiv"];
for(i=0;i<zdivs.length;i++){zdivs[zdivs[i]]=MapSizeY1*MapSizeX1+i;}

//errlog/welcome
if(window.$&&$("body")){}else{t=document.getElementById("PopUp");t.innerHTML='Sorry. This game requires jQuery version 1.11.2, but <a href="http://jquery.com/browser-support/">your browser doesn\'t support it</a>. :(';t.style.visibility="visible";}

//map
scroller=$($.parseHTML("<DIV />"))
.css({position:"absolute",width:Map2X*2+"px",height:Map2Y*2+"px",top:0,left:0,overflow:"hidden"})
.appendTo(document.body);

//map
if(typeof Tileset=="undefined"){Tileset=(function(){var r="",i,m=["Gg","Ge","Gb","Gd","Og","Re"];for(i=0;i<TotalTiles*4;i++){r+=m[Math.floor(Math.random()*100)]||"Ga";}return[r.substring(0,TotalTiles),r.substring(TotalTiles,TotalTiles*2),r.substring(TotalTiles*2,TotalTiles*3),r.substring(TotalTiles*3,TotalTiles*4)];})();}
screenV=SetTiles(0,1,Tileset[2]);
screenW=SetTiles(1,1,Tileset[3]);//reverse order to avoid IE zindex issues
screenT=SetTiles(0,0,Tileset[0]);
screenU=SetTiles(1,0,Tileset[1]);
PendingTileset=0;

//docBody=document.getElementsByTagName("body").item(0);

//util
Cookie=window.localStorage?{
set:function(k,v){localStorage.setItem(k,v);},
get:function(k){return localStorage.getItem(k);},
ready:1
}:window.openDatabase?{//Safari and a few others supported Web SQL before localStorage
ini:function(){Cookie.db2={};Cookie.db=openDatabase("C","","local cookies",999);Cookie.db.transaction(function(t){t.executeSql('CREATE TABLE IF NOT EXISTS cookies (key TEXT PRIMARY KEY unique ON CONFLICT REPLACE, value TEXT)',[],function(t){t.executeSql('SELECT * FROM cookies',[],function(t,r){for(var i=0;i<r.rows.length;i++){Cookie.db2[r.rows.item(i).key]=r.rows.item(i).value;}Cookie.ready=1;},function(x,e){console.log("SELECT",x,e);});},function(x,e){console.log("CREATE",x,e);});});},
set:function(k,v){var K=''+k,V=''+v;Cookie.db2[K]=V;Cookie.db.transaction(function(t){t.executeSql('INSERT INTO cookies (key,value) VALUES (?,?)',[K,V]);});},
get:function(k){if(Cookie.ready){return Cookie.db2[''+k]||null;}return console.error("!Cookie.ready in Cookie.get("+k+") using Web SQL");}//cached rather than trying to wait for callback
}:document.createElement&&document.body.addBehavior?{//userData for IE5-7 or 8 with localStorage disabled
b:document.createElement("B"),
ini:function(){Cookie.b.style.display="none";document.body.appendChild(Cookie.b);Cookie.b.addBehavior("#default#userData");Cookie.ready=1;},
k:function(a){return'_'+escape(a).replace(/\./g,".2e").replace(/%/g,".").replace(/\*/g,".2a").replace(/\+/g,".2b").replace(/\//g,".2f").replace(/\@/g,".40");},
set:function(k,v){Cookie.b.setAttribute(Cookie.k(k),v);Cookie.b.save("C");},
get:function(k){Cookie.b.load("C");return Cookie.b.getAttribute(Cookie.k(k));}
}:{//Cookie crumbs stored in one cookie named C as a last resort
e:window.encodeURIComponent||window.escape,
u:window.decodeURIComponent||window.unescape,
ini:function(){Cookie.db={};var a,i,m=document.cookie.match(new RegExp("(^|; *)C=([^;]*)(;|$)")),C=m?Cookie.u(m[2]).split("&"):[];for(i=0;i<C.length;i++){a=C[i].split("=");Cookie.db[Cookie.u(a[0])]=Cookie.u(a[1]);}Cookie.ready=1;},
upd:function(){var C=[],i;for(i in Cookie.db)C.push(Cookie.e(i)+"="+Cookie.e(Cookie.db[i]));document.cookie="C="+C.join("&")+";path="+ServerPath+";expires="+(new Date(+new Date+(C.length?31622400000:-1000))).toUTCString();},
set:function(k,v){Cookie.db[''+k]=''+v;Cookie.upd();},
get:function(k){if(Cookie.ready){return Cookie.db[''+k]||null;}return console.error("!Cookie.ready in Cookie.get("+k+") using document.cookie");}
};Cookie.ini&&Cookie.ini();

Welcome("Client Loaded");

errlog=window.console&&(console.error||console.log)||function(m){};
function ImgErr(){var u=this.src;this.src=DirItem+'/OZa.gif';errlog("Image error: "+u+" -> "+this.src);/*this.style.display="none"; happens prematurely*/}//could have a ghostly image option, as well, such as for items?
function ItemImgErr(){var u=this.src;/*if(this.src.search(/[\\\/]O[A-Z][0-9a-z]\.gif$/)<0){*/this.src=DirItem+"/OZa.gif";/*}*/errlog("Item image error: "+u+" -> "+this.src);}
function TileImgErr(){var u=this.src;this.src=DirItem+'/OZa.gif';errlog("Tile image error: "+u+" -> "+this.src);}
function CharImgErr(){var m,u=this.src;
if(m=u.match(/\/CHRH[MF][0-9a-z](L|R|)\.gif$/)){
this.src=DirChar+"/CHRHne"+m[1]+".gif";
}else if(m=u.match(/\/CHR[MF][0-9a-z](L|R|)\.gif$/)){
this.src=DirChar+"/CHRnw"+m[1]+".gif";
//}else if(m=this.src.match(/\/CHI[A-Z][0-9a-z](L|R)\.gif$/)){
}else{//unknown
this.src=DirItem+"/OZa.gif";
}
errlog("Character image error: "+u+" -> "+this.src);
}

function SetTiles(x,y,m){
var T,i,j,o=document.createElement("DIV"),z=0;
o.style.position="absolute";
o.style.left=x*Map2X+"px";
o.style.top=y*Map2Y+"px";
o.style.width=Map2X+"px";
o.style.height=Map2Y+"px";
for (i=0; i<MapSizeY1; i++) {
  for (j=0; j<MapSizeX1; j++) {
    T=document.createElement("IMG");
    T.height=T.width=32;
    T.src=DirTile+"/"+(m.substring(z*2,(z++)*2+2)||"Ga")+".png";
    T.onerror=TileImgErr;
    T.className="tile";
    T.onmousedown=new Function("ClickHere("+(i*MapSizeX1+j)+",this.parentNode)");
    o.appendChild(T);
  }
}
for(i=0;i<zdivs.length;i++){
  T=document.createElement("DIV");
  T.className=zdivs[i];
  T.style.position="absolute";
  T.style.left=T.style.top=0;
  o.appendChild(T);
  o[zdivs[i]]=T;
}
scroller.prepend(o);//prepend to keep in background
return o;
}

function ClickHere(z,T){//forget T if using client 4-screen view z-location, otherwise T is screen DOM object
  if(document.onkeydown!=ProcessInput){return;}
  var a,i,m=[],s,sX,sY,sZ,hZ,p,t;
  if(T){//1-screen map z-location
    sZ=z;
    sY=Math.floor(z/MapSizeX1);
    sX=z-sY*MapSizeX1;
    //MoveX and MoveY could be made more accurate if called during a scroll if changed to use mapid instead of screen DOM object
    MoveX=Math.min(ViewWide,Math.max(0,sX+(T==screenU||T==screenW?MapSizeX1:0)));
    MoveY=Math.min(ViewHigh,Math.max(0,sY+(T==screenV||T==screenW?MapSizeY1:0)));
    MoveZ=MoveY*ViewWide+MoveX;
    s=T==screenW?3:T==screenV?2:T==screenU?1:0;
  }else{//4-screen view z-location
    MoveZ=z;
    MoveY=Math.floor(MoveZ/ViewWide);
    MoveX=MoveZ-MoveY*ViewWide;
    s=MoveY<MapSizeY1?MoveX<MapSizeX1?0:1:MoveX<MapSizeX1?2:3;
    sZ=sX+MapSizeX1*sY;
    sX=MoveX%MapSizeX1;
    sY=MoveY%MapSizeY1;
    T=[screenT,screenU,screenV,screenW][s];
  }
  PopClick=MoveZ;
  hZ="0"+sZ.toString(16);hZ=hZ.substring(hZ.length-2);
  p=CharPObj.tz==sZ&&CharMapObj==T;
  // is there a dynamic object at this location?
  a=window["items"+s];
  if(a.indexOf(hZ)>-1) {
    for(i=2;i<a.length;i+=4) {
      if(a.substring(i,i+2)==hZ){
        m.push('<a href="javascript:var Que=\'get&j='+a.substring(i-2,i)+'\'; MoveThere();">Get '+ItemID(a.substring(i-2,i))+'</a>');
      }
    }
  }
  // is there a static object at this location?
  a=staticitems[s];
  if(a.indexOf(hZ)>-1) {
    for(i=2;i<a.length;i+=4) {
      if(a.substring(i,i+2)==hZ){
        //m.push('<a href="javascript:var Que=\'static&j='+a.substring(i-2,i)+'\'; MoveThere();">'+ItemID(a.substring(i-2,i))+'</a>');
      }
    }
  }

  for (i in characters) {
    if(characters[i].tz==sZ&&characters[i].tmap0==s&&i!=CharName) {
      if(characters[i].NPC){
        a=window[i];
        m.push(a?'<a href=javascript:'+i+'(0);>'+(ItemID(i)||i)+'</a>':i);
      }else{
        m.push(i);//TODO: replace name with menu items for this player
      }
    }
  }

  // building menus
  if (s==0) { sitems=static0; } else { if (s==1) { sitems=static1; } else { if (s==2) { sitems=static2; } else { sitems=static3; }}}

  if(sitems){
   items=sitems.split(" ");
   for (i=0; i<items.length; i++) {
    item=items[i].split("=");
    if (item[1]==sZ) {
      if (item[0].length==2) {
        // make subroutine that includes data like bait
        m.push('<a href="javascript:ClickStatic(\''+item[0]+'\');">'+ItemID(item[0])+'</a>');
      } else {
        if (item[0].substring(0,3)=="NPC") { // npc
          // computer characters already processed, do nothing here
        } else {
          if (item[0].length>2) { //building
            m.push('<a href="javascript:var Que=\'static&j='+item[0]+'\'; MoveThere();">'+ItemID(item[0])+'</a>');
          } else {
            if (item[0].length>0) {
              m.push('one digit');
            }
          }
        }
      }
    }
   }
  }
  // if not, then move player
  if(m.length){
    POP((p?'<a href=javascript:Null(); onmousedown="RInven=1">Inventory</a><br />':'')+m.join("<br />")+'<br /><a href=javascript:Null(); onmousedown="MoveThere()">Walk Here</a>',"click");
  }else{
    if(p){
      RInven=1;
    }else{
      MoveThere();
    }
  }
}

function ClickStatic(a) {
  Que="static&j="+a;
  if (a=="Zg") { Que=Que+"&k="+Bait; }
  MoveThere();
}

function MoveThere(){
  MovedZ=MoveZ;
  var CharZ=CharToken[3].substring(2);
  CharRY=Math.floor(CharZ/MapSizeX1);
  CharRX=CharZ-(CharRY*MapSizeX1)+(CharToken[3].charAt(0)&1?0:MapSizeX1);
  if(CharToken[3].charAt(0)>'2'){CharRY+=MapSizeY1;}
  DistX=Math.abs(CharRX-MoveX);
  DistY=Math.abs(CharRY-MoveY);
  D1=CharRX>MoveX?"l":CharRX<MoveX?"r":'';
  //if(D1){MoveChar(D1.toUpperCase());} //turn player in preparation of move
  D2=CharRY>MoveY?"u":CharRY<MoveY?"d":D1;
  if(D1==''){D1=D2;}
  if (DistX>DistY) {
    Step=Math.round(DistX/DistY);
  } else {
    var t=D1;D1=D2;D2=t;//swap
    Step=Math.round(DistY/DistX);
  }
  if (Step==0) { Step++; }
  HPOP(); PopForce="hidden";
  $("#MH").css({left:MoveX*32+TopXPos,top:MoveY*32+TopYPos,visibility:"visible"});
  HideObjs=setTimeout('document.getElementById("MH").style.visibility="hidden";',250);
  if(D1){//if movement
    Moves="";Move=1;MoveNum=100;
    while (MoveZ&&Move) {
      //MoveZ is destination, Move is last move, which shouldn't be blank
      MovePlayer();
    }
    Moves=Moves+".";
  }
}

function MovePlayer() {
  Move="";
  if(!--MoveNum)return;
  z=(CharRY*ViewWide)+CharRX;
  if (z==MoveZ) {
    MoveZ=0; MoveX=0; MoveY=0; ToDo="";
    //
    // remove this
    var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0; 
    // POP("MoveThere "+Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1));
    //
  } else {
    if (CharRY==MoveY) {
      if (D1=="u" || D1=="d") { D1=D2; }
      if (D2=="u" || D2=="d") { D2=D1; }
    }
    if (CharRX==MoveX) {
      if (D1=="r" || D1=="l") { D1=D2; }
      if (D2=="r" || D2=="l") { D2=D1; }
    }
    if (Step) {
      Move=D1;
      Step--;
    } else {
      if (D1) {
        Move=D2;
        Step=DistX>DistY?Math.round(DistX/DistY):Math.round(DistY/DistX);
        if (Step==0) { Step++; }
      }
    }
    Moves=Moves+Move;
    if(Move=="l") { CharRX--; CharX--; /*MoveChar("L");*/ }
    if(Move=="r") { CharRX++; CharX++; /*MoveChar("R");*/ }
    if(Move=="u") { CharRY--; CharY--; /*MoveChar();*/ }
    if(Move=="d") { CharRY++; CharY++; /*MoveChar();*/ }
  }
}

function Welcome(msg) {
  document.onkeydown=document.onkeypress=document.onkeyup=Null;
  parent.document.onkeydown=parent.document.onkeypress=parent.document.onkeyup=Null;
  clearTimeout(MainLoop.timer);
  Chatting=0;$('#CHAT',parent.document).css("visibility",'hidden');
  PopForce="visible"; PopAlign="center";
       Game="<p>Welcome to Queville "+CVer+"<br>Land of the Dragon Basher";
  Game=Game+"<p>Can you imagine<br>a world without money?<p>Lets try!";
  Game=Game+"<form name=login action=\"javascript:Login();\">";
  if(msg){Game+='<p style="color:red;text-align:center">'+msg+'</p>';}
  Game=Game+'<p align=right>Player Name: <input type=text name=n value="'+CharName+'">';
  Game=Game+"<br>Password: <input type=password name=p>";
  Game=Game+"<p><input type=submit name=c value=\"login\"><input type=hidden name=d value=\"\"><input type=hidden name=s value=\""+getServerName()+"\"></form>";
  Game=Game+"<p><a href=\"javascript:NewChar();\">Create New Character</a>";
  CharPswd=1;//allow popup
  POP(Game);
  CharPswd='';
}

function NewChar() {
  PopForce="visible"; PopAlign="center";
  Game="<p>Welcome to Queville v11<br>Land of the Dragon Basher";
  Game=Game+"<form name=login action=\"javascript:Login();\">";
  Game=Game+"<p align=right>Player Name: <input type=text name=n>";
  Game=Game+"<p align=right>Password: <input type=password name=p>";
  Game=Game+"<br>Verify Password: <input type=password name=d>";
  Game=Game+"<p><input type=submit name=c value=\"create\"><input type=hidden name=s value=\""+getServerName()+"\"></form>";
  Game=Game+"<p><a href=\"javascript:Welcome();\">Return to Login</a>";
  CharPswd=1;//allow popup
  POP(Game);
  CharPswd='';
}

function Login() {
  ToDo=document.forms.login.c.value+"&d="+document.forms.login.d.value;
  ServerName=document.forms.login.s.value;
  CharPswd=document.forms.login.p.value;
  if(CharName!=document.forms.login.n.value){
    CharName=document.forms.login.n.value;
    for(var t in showtab.tabs){
      if(showtab.tabs[t].log){
        showtab.tabs[t].log.html((showtab.tabs[t].initHTML&&showtab.tabs[t].initHTML()||
		'<p style="text-align:center"><br>Welcome, '+CharName+'<br>to Queville '+CVer+"<br>Land of the Dragon Basher<br><br>Can you imagine<br>a world without money?<br><br>Lets try<br></p>"
        )+'<br>');
      }
    }
  }
  Sysop=CharName==ServerName;//||CharName=="qua";//remove the =qua part after testing (Server should block qua, though)
  POP("Logging In...");
  IStamp=(+new Date)+50000;
  HitIt();
}

function getServerName(){ var s=location.search.match(/[?&]s=([^&]*)(&|$)/);s=s&&s[1]?s[1].replace(/[^A-Za-z0-9\-]/g,''):"";return s=="11-dragon"?"":s; }//same filter as server uses

function HitIt() {
  var idle='',t,m=Moves,cmd=ToDo||m&&"refresh",chatlog=SendChatTo&&SendChatTo.log||Chatting&&Chatting.log;Moves=ToDo="";HittingIt=1;
  if (IStamp+IdleLimit<CStamp){
    if (true/*!isMod()*/) {
      // this check turns off idle logout for players with the sysop key
      cmd="logout"; idle=" due to inactivity";
    }
  }
  if (!cmd) { cmd=SendChat&&SendChatTo?"chat&j="+SendChatTo.metachannel+"&q="+(window.encodeURIComponent||window.escape)(SendChat).replace(/\+/g,"%2b"):Chatting&&Chatting.metachannel?"chat&j="+Chatting.metachannel:"refresh"; SendChat="";SendChatTo=0; }
  servers=[];
  $.ajax({
    url: Server,
    type: 'GET',
    data: 's='+ServerName+'&n='+CharName+'&p='+CharPswd+'&c='+cmd+'&m='+m,
    contentType: 'application/json; charset=utf-8', success: function (response) {
      var i,i0="",i1="",i2="",i3="",s0="",s1="",s2="",s3="",p=0,t,h,M="";
      SResults=response.match(/[^\r\n]+/g);
      if (SResults) {
        SPop="";
        for (i in characters){characters[i].off=1;}
        for (i=0; i<SResults.length; i++) {
          SVar=SResults[i].substring(0,SResults[i].indexOf("="));
          SValue=SResults[i].substring(SResults[i].indexOf("=")+1,SResults[i].length);
          // uncomment next line to debug server results
          // alert(SVar+"="+SValue);
          // react to server results
          // p=players, c=characters, b=buildings, i=items
          if (SVar=="create"){ PopForce="hidden"; }
          if (SVar=="login"){
            CharName=SValue; POP(SValue+" logged in."); PopForce="hidden"; PopAlign="char"; cinput();
            for(var t in showtab.tabs){ if(showtab.tabs[t].log){ clog(showtab.tabs[t].loginHTML&&showtab.tabs[t].loginHTML()||"Welcome to the "+ServerName+" server, "+CharName+"!",showtab.tabs[t].log); }}
            document.onkeydown=ProcessInput; document.onkeypress=CancelKey; document.onkeyup=CancelKey;
            parent.document.onkeydown=ProcessInput; parent.document.onkeypress=parent.document.onkeyup=CancelKey;
            setTimeout('MainLoop();',subtick); // starts repeating loop
		    setTimeout(TeamChatInit,tick);
          }
          if (SVar=="logout"){ if(!idle){ for(var t in showtab.tabs){ if(showtab.tabs[t].log){ showtab.tabs[t].log.html(""); }} CharName=""; } Welcome(clog("You have been logged out"+idle+".","POPLOG")); ServerName="11-dragon"; }
          if (SVar=="error") { Welcome('ERROR: '+SValue); ServerName="11-dragon"; return; }
          if (SVar=="servers") { ShowServers(); }
          if (SVar=="hpop") { PopForce="hidden"; HPOP(); }
          if (SVar=="pop")  { PopForce="hidden"; SPop=SPop+SValue+"<br>"; }
          if (SVar=="alert")  { alert(SValue); }
          if (SVar=="chat") { clog(SValue,chatlog); }
          if (SVar=="RMap") { RMap=SValue; }
          if (SVar=="RChar"){ RChar=SValue; }
          if (SVar=="RStatic"){ RStatic=SValue; }
          if (SVar=="t0"){ (scrollmap?PendingTileset:Tileset)[0]=SValue; }
          if (SVar=="t1"){ (scrollmap?PendingTileset:Tileset)[1]=SValue; }
          if (SVar=="t2"){ (scrollmap?PendingTileset:Tileset)[2]=SValue; }
          if (SVar=="t3"){ (scrollmap?PendingTileset:Tileset)[3]=SValue; }
          if (SVar=="t4"){ Tileset[scrollmap?6:4]=SValue; }
          if (SVar=="t5"){ Tileset[scrollmap?7:5]=SValue; }
          if (SVar=="i0"){ i0=SValue; }
          if (SVar=="i1"){ i1=SValue; }
          if (SVar=="i2"){ i2=SValue; }
          if (SVar=="i3"){ i3=SValue; }
          if (SVar=="s0"){ s0=SValue; }
          if (SVar=="s1"){ s1=SValue; }
          if (SVar=="s2"){ s2=SValue; }
          if (SVar=="s3"){ s3=SValue; }
          if (SVar=="p") { AddCharacter(SValue.split(" ")); p=1; }
          // token="[name] [level] [object] [z] ";
          // token[0]=name token[1]=level token[2]=obj token[3]=z
          // if (SVar=="c") { AddCharacter(SValue.split(" "),1);}
          // if (SVar=="b") { buildings.push(SValue); }
          if (SVar=="s") { servers.push(SValue); }
          if (SVar=="scroll") { if(scrollmap){scrollmap2=SValue;}else{scrollmap=SValue;} }
          if (SVar=="moves") { M=SValue; }
          if (SVar=="inv"){ CharInven=SValue; }
          if (SVar=="h"){ CharH=SValue; }
          if (SVar=="dinv") { RInven=1; }
        }
        if (SPop) { SPop.length-=4;POP(clog(SPop,"POPLOG")); }
      }
      RefRPG=0; if (Que) { if (Moves=="") { ToDo=Que; Que=""; }}
      //console.log([scrollmap,M,Moves,MoveZ,MovedZ]);
      if(scrollmap){
		ScrollMap(scrollmap);
		scrollmap=0;
		if(M){
		  //
		  // TODO: fix this in ScrollMap() by adjusting MovedZ
		  //       and moving below "if(Moves)" out of else clause
		  //
		  if(Moves){
		    Moves="";
            var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
            POP(Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1));
		  } else {
		    Moves=M;
		  }
		}
      }else{
		if(Moves){/*This doesn't correct properly
			MoveZ=MovedZ;//update since server moved player before new mouse click
			MoveY=Math.floor(MoveZ/ViewWide);
			MoveX=MoveZ-MoveY*ViewWide;
			MoveThere();
		*/
		}else{
			Moves=M;
		}
      }
      if (RMap) { RefMap(); }
      if (RChar) { SelectChar(RChar); }
      //from here to RefItems(), the order is important
      if (RStatic) { items0=i0;items1=i1;items2=i2;items3=i3;static0=s0;static1=s1;static2=s2;static3=s3;RefStatic();p|=2; }
      for(i in characters){if(characters[i].off&&p&(characters[i].NPC?2:1)&&characters[i].tmapo==[screenT,screenU,screenV,screenW][characters[i].tmap0]&&i!=CharName){characters[i]=undefined;delete characters[i];}}//get rid of deleted NPCs and players who logged out
      RefPlayers();
      RefItems();
      if(p&2&&!Chatting){$("#CHAT",parent.document).css("visibility","hidden");}//shown in MainLoop, below
      if (RInven) { RefreshInven(); }
      HittingIt=0;
      CStamp=+new Date;
    },
    error: function (xhr,stat,emsg) {
        if(typeof console!="undefined"){console.log("AJAX error: ",stat,emsg,xhr);}
        Welcome("ERROR: Lost server connection"+(emsg?" ("+emsg+")":""));
    }
  });
}

function MainLoop() {
  // if no character object, request object
  // UpdateObjs();
  RefPlayers();
  
  //if (TileMode) {
  //  pops up tile code when walking in tile mode
  //  var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
  //  POP(Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1));
  //}

  //if (Chatting){showtab('default')}//hidden on RStatic, above
  RefRPG=RefRPG+subtick;
  //
  // make this work: should hit server if there is a command in 
  // que, thus reducing lag times. @@@
  // 
  if (ToDo) {
    //POP(Moves);
    if (Moves=="") {
      //POP("ToDo "+ToDo);
    }
  }
  if (RefRPG>=tick&&!HittingIt) { HitIt(); }
  if (ServerName != "11-dragon") { clearTimeout(MainLoop.timer);MainLoop.timer=setTimeout(MainLoop,subtick); }
}

function RefStatic() {
  RStatic=0;
  staticitems=["","","",""];
  if (static0) { RefStatic1(0,static0); }
  if (static1) { RefStatic1(1,static1); }
  if (static2) { RefStatic1(2,static2); }
  if (static3) { RefStatic1(3,static3); }
}

function RefStatic1(n,sitems) {//adds items and NPCs to display lists, currently doesn't support buildings, example: s1=NPCKing-M23LL3=L0 L0=186
  var i,sitem,s="TUVW".charAt(n),sx,sy,sz,statics=sitems.split(" "),b={},B,d;
  for (i=0; i<statics.length; i++) {
    sitem=statics[i].substring(0,statics[i].indexOf("="));
    sz=parseInt(statics[i].substring(statics[i].indexOf("=")+1,statics[i].length));
    sy=Math.floor(sz/MapSizeX1);
    sx=sz-sy*MapSizeX1;
    if (sitem.length==2) {
      sz="0"+sz.toString(16);
      if(window["items"+n].indexOf(sitem+=sz.substring(sz.length-2))<0){
        staticitems[n]+=sitem;
      }
    } else {
      if (sitem.substring(0,3)=="NPC") {
        AddCharacter([sitem.substring(0,sitem.indexOf("-")),"",sitem.substring(sitem.indexOf("-")+1,sitem.length),(1+n)+"-"+sz],1);
      } else {
        if (sitem.length>2) {// render building
          buildings[n]+=sitem; //@@@
          b[d=sitem+"_"+s+sz]=1;
          B=document.getElementById(d);
          if(!B){
            B=document.createElement("IMG");
            B.setAttribute("id",d);
            B.setAttribute("class","building");
            B.setAttribute("src",DirBuild+"/"+sitem+".gif");
            B.style.position="absolute";
            B.onerror=ImgErr;
            B.style.pointerEvents="none";
          }
          B.style.left=sx*32+"px";//was centered in Queville, though left align resolves IE problems...
          B.style.bottom=(MapSizeY-sy)*32+"px";
          B.onmousedown=new Function("ClickHere("+sz+",screen"+s+")");
          window["screen"+s].builddiv.appendChild(B);
        } else {
          // reserved - one digit

          //If the last character is a space, the empty static object ends up here as sitem[0]==""
        }
      }
    }
  }
  B=window["screen"+s].builddiv.childNodes;
  for(i=0;i<B.length;i++){if(!b[B[i].id]){B[i].parentNode.removeChild(B[i]);}}
}

function RefItems() {
  // updates items on map
  RefItems1(screenT,staticitems[0]+items0);
  RefItems1(screenU,staticitems[1]+items1);
  RefItems1(screenV,staticitems[2]+items2);
  RefItems1(screenW,staticitems[3]+items3);
}
function RefItems1(m,inv){//example: i1=L0b8L0b9
  var a=m.itemdiv,i=0,j=0,o,x,y,z;
  while(i<inv.length){
    o=a.childNodes[j++];
    if(!o){a.appendChild(o=document.createElement("IMG"));}
    o.setAttribute("src",DirItem+"/O"+inv.substring(i,i+=2)+".gif");
    o.onerror=ItemImgErr;
    z=parseInt(inv.substring(i,i+=2),16);
    y=Math.floor(z/MapSizeX1);
    x=z-(y*MapSizeX1);
    o.style.position="absolute";
    o.style.top=y*32+"px";
    o.style.left=x*32+"px";
    o.style.pointerEvents="none";
    o.onmousedown=new Function("ClickHere("+z+",screen"+(m==screenT?"T":m==screenU?"U":m==screenV?"V":"W")+")");
  }
  while(j<a.childNodes.length)a.removeChild(a.lastChild);
}

function ClickInven(a){
    //
    // is player carrying item i ??
    //
  MenuSlot=a.split("-")[0];
  MenuItem=a.split("-")[1];
  Wearing=isWearing(MenuItem);
  Game="<p>&nbsp;"+ItemID(MenuItem)+"&nbsp;<p>";
  Game=Game+"&nbsp;<img src=\""+DirItem+"/O"+MenuItem+".gif\" height=32 width=32 onmousedown=\"DistplayInven();\" ";
  bg="#ffffd0";
  if (MenuItem==Bait) { bg="#80FF80"; }
  if (Wearing) { bg="#80FF80"; }
  Game=Game+" style=\"background-color: "+bg+";\" border=1>&nbsp;<p>";

  if (MenuItem>="Fa" && MenuItem<="Fd") {
    Game=Game+'<a href="javascript:var ToDo=\'eat&j='+MenuSlot+'-'+MenuItem+'\'; HPOP();">Eat '+ItemID(MenuItem)+'</a><br>';
    Game=Game+'<a href="javascript:var ToDo=\'plant&j='+MenuSlot+'-'+MenuItem+'\'; HPOP();">Plant '+ItemID(MenuItem)+'</a><br>';  
  }
  
  if (MenuItem>="A0" && MenuItem<="Kz") {
    Game=Game+'<a href="javascript:var ToDo=\'drop&j='+MenuSlot+'-'+MenuItem+'\'; HPOP();">Drop '+ItemID(MenuItem)+'</a><br>';
  }
  
  Game=Game+'<a href="javascript:var ToDo=\'exam&j='+MenuSlot+'-'+MenuItem+'\'; HPOP();">Examine '+ItemID(MenuItem)+'</a><br>';
 
  if (MenuItem==isMod.key) { // sysop key menu
    var s=window["static"+CharPObj.tmap0].split(" "),i,o;
    for(i=0;i<s.length;i++)if(s[i].split("=")[1]==CharPObj.tz){o=s[i].split("=")[0];break;}
    Game+="<a href=\"javascript:LoadChat('/tele ','[map]-[z]')\">/teleport</a><br>";
    if (TileMode) {
      if (TileFill) {
        Game+='<a href="javascript:SetFill();">Exit Tile Fill Mode</a><br>';
      } else {
        Game+='<a href="javascript:SetFill();">Enter Tile Fill Mode</a><br>';
      }
      Game+='<a href="javascript:SetMode();">Exit Tile Edit Mode</a><br>';
    } else {
      Game+='<a href="javascript:SetMode();;">Enter Tile Edit Mode</a><br>';
    }
    Game+='<a href="javascript:'+(i<s.length?'Null(ToDo=\'add&j='+o+'\');">Delete '+(o.length==2?ItemID(o):o):'AddStatic(0);">Add Static Item')+'</a><br>';
  }

  if (MenuItem>="Dj" && MenuItem<="Dl") {
    Game=Game+'<a href="javascript:Match(\''+MenuSlot+'-'+MenuItem+'\');">Light Fire</a><br>';
  }
  
  if (MenuItem>="Ga" && MenuItem<="Gz") {
    Game=Game+'<a href="javascript:Cook(\''+MenuSlot+'-'+MenuItem+'\');">Cook '+ItemID(MenuItem)+'</a><br>';
    if (MenuItem==Bait) {
      Game=Game+'<a href="javascript:ClickBait(0);">Using As Bait</a><br>';
    } else {
      Game=Game+'<a href="javascript:ClickBait(\''+MenuItem+'\');">Use As Bait</a><br>';
    }
  }

  if (MenuItem>="Ja" && MenuItem<="Jz") {
    Game=Game+'<a href="javascript:Eat(\''+MenuSlot+'-'+MenuItem+'\');">Eat '+ItemID(MenuItem)+'</a><br>';
  }
    
  if (MenuItem>="La" && MenuItem<="Sz") {
    if (Wearing) {
      if (MenuItem=="Sa") {
        Game=Game+'<a href="javascript:var ToDo=\'team&j='+MenuItem+'\';">Team Teleport</a><br>';
      }
      Game=Game+'<a href="javascript:var ToDo=\'remove&j='+MenuItem+'\';">Remove  '+ItemID(MenuItem)+'</a><br>';
    } else {
      Game=Game+'<a href="javascript:var ToDo=\'wear&j='+MenuItem+'\';">Wear '+ItemID(MenuItem)+'</a><br>';
    }
    Game=Game+'<a href="javascript:var ToDo=\'drop&j='+MenuSlot+'-'+MenuItem+'\';">Drop '+ItemID(MenuItem)+'</a><br>';
  }
  if (MenuItem=="Za"&&isMod(1)){
    Game+='<a href="javascript:CreateItem(\''+MenuSlot+'\')">Create Item</a>';
  }
  if (MenuItem=="Zj"){ Game=Game+'<a href="javascript:var ToDo=\'drop&j='+MenuSlot+'-'+MenuItem+'\'; HPOP();">Drop '+ItemID(MenuItem)+'</a><br>'; }
  PopAlign="char"; POP(Game);
}

function ClickBait(a) { if (a) { Bait=a; } else { Bait=""; } RefreshInven(); }

function SetMode() {
  if (TileMode) {
    TileMode=0;
    POP("Done editing tiles");
  } else {
    TileMode=1;
    POP("You are now editing tiles");
  }
}

function SetFill() {
  if (TileFill) {
    TileFill="";
    POP("No longer in tile fill mode");
  } else {
    var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
    TileFill=Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1);
    POP("Now in tile fill mode - "+TileFill);
  }
}

function Cook(a) {
  MenuItem=a.split("-")[1];
  ToDo="cook&j="+a;
  POP("Cooking "+ItemID(MenuItem)+"...");
}

function Eat(a) {
  MenuItem=a.split("-")[1];
  ToDo="eat&j="+a;
  POP("Eating "+ItemID(MenuItem)+"...");
}

function Match(a) {
  MenuItem=a.split("-")[1];
  ToDo="match&j="+a;
  POP("Lighting Match...");
}

function CreateItem(a){
  //list of items, sent to the server with ToDo=newitem&j=MenuSlot-MenuItem-Time
  LoadChat("/inventory "+a+" ^","itemid minutes");
}

function RemoveArmr(i) {
  HPOP();
  ToDo="C=RA&J="+CharInven.substring(i*2,i*2+2);
}

function AddCharacter(token,NPC){var t2=token[2].split("-"),t3=token[3].split("-"),p={
token:token,
name:token[0],
level:token[1],
obj:t2[0],
ani:t2.length>1&&characters[token[0]]&&characters[token[0]].lastpZ_m==t2[1]+token[3]?"":t2[1],//movement bounce eliminator, so server doesn't need to sync animation for each client separately
lastpZ_m:t2[1]+token[3],
mapz:token[3],
tmap:+t3[0],
tmap0:t3[0]-1,
tmapo:[screenT,screenU,screenV,screenW][t3[0]-1],
tz:+t3[1],
NPC:NPC
};
characters[p.name]=p;
}

function RefPlayers() {
  // loop through characters
  var p,pt={},t,name;
  for (name in characters) {
    p=characters[name];
    if(p.tmapo==[screenT,screenU,screenV,screenW][p.tmap0]||name==CharName){//check for scrollout
    var i,C;
    if (p.ani) {
      i=Math.floor(RefRPG/subtick);
      if(i<p.ani.length){
        // move each player one tile as per [object-moves]
        if (TileMode) {
          //pops up tile code when walking in tile mode
          //var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
          //POP("RefPlayers "+Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1));
        }
        var m=+p.tmap,X=p.tz,Y=Math.floor(X/MapSizeX1);X-=Y*MapSizeX1;t=1;
        for(;i<p.ani.length;i++){
          C=p.ani.charAt(i);
          if(C=="r") { X--;if(X<0){if(m&1){t=0;}else{m--;X+=MapSizeX1;}}}
          if(C=="l") { X++;if(X>MapSizeX){if(m&1){m++;X-=MapSizeX1;}else{t=0;}}}
          if(C=="d") { Y--;if(Y<0){if(m>2){m-=2;Y+=MapSizeY1;}else{t=0;}}}
          if(C=="u") { Y++;if(Y>MapSizeY){if(m<3){m+=2;Y-=MapSizeY1;}else{t=0;}}}
          if(C==".") {
            if (p.name==CharName) {
              //not working here either - ugh
              //var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0; 
              //POP(Tileset[screen].charAt(ObjZ*2)+Tileset[screen].charAt((ObjZ*2)+1));
            }
          }
        }
        t=t&&m+'-'+(X+(Y*(MapSizeX+1)));
      }else{t=p.mapz;p.ani='';}
    }else{t=p.mapz;}
    // if player reaches an 'edge tile', delete object
    if(t){//on visible screen? (otherwise will be deleted, below)
     //RenderObj(p,t);
	 var D=([0,screenT,screenU,screenV,screenW][t.charAt(0)]||screenT).plyrdiv,
	 d,e,f=new Function("ClickHere("+p.tz+",screen"+" TUVW".charAt(t.charAt(0))+");"),
	 obj=p.obj.split("-")[0];
	 ObjZ=+t.substring(2);
	 ObjY=Math.floor(ObjZ/MapSizeX1);
	 ObjX=ObjZ-(ObjY*MapSizeX1);
	 //ObjZ=ObjX+(ObjY*MapSizeX1);
	 p.screenX=ObjX;//%MapSizeX1;
	 p.screenY=ObjY;//%MapSizeY1;
	 if (p.name==CharName) {
 		CharPObj=p;
		CharMapObj=D.parentNode;
		CharToken=p.token;
		CharZ=ObjZ;
		CharX=ObjX+(t.charAt(0)&1?0:MapSizeX1);
		CharY=ObjY+(t.charAt(0)>'2'?MapSizeY1:0);
		CharObj=obj;
	 }
	 C=['/CHR'+obj.charAt(0)+obj.charAt(2),'/CHRH'+obj.charAt(0)+obj.charAt(1)];for(i=4;i<obj.length;){C.push('/CHI'+obj.substring(i,i+=2));}
	 d=document.getElementById("obj_"+p.name);
	 if(!d){d=document.createElement("DIV");d.setAttribute("id","obj_"+p.name);d.setAttribute("class","object");d.style.position="absolute";}
	 p.div=d;
	 d.style.left=(ObjX*32)-16+"px";
	 d.style.top=(ObjY*32)-32+"px";
	 if(d.parentNode!=D){D.appendChild(d);}
	 while(d.childNodes.length>C.length){d.removeChild(d.lastChild);}
	 for(i=0;i<C.length;i++){
		if(i<d.childNodes.length){e=d.childNodes[i];}else{e=document.createElement("IMG");e.style.position="absolute";e.style.top=e.style.left=0;e.style.pointerEvents="none";e.onerror=CharImgErr;d.appendChild(e);}
		e.onmousedown=f;
		D=DirChar+C[i]+obj.charAt(3)+".gif";
		if (e.src != D) { e.setAttribute("src",D); }
	 }
      pt[name]=1;
    }}else{
      if(p.tmapo.parentNode==scroller[0]){pt[name]=3;}//don't delete characters during scroll
    }
  }

  var po=$(".object");
  for (i=0;i<po.length;i++ ){name=po[i].id.substring(4);if(!pt[name]){po[i].parentNode.removeChild(po[i]);characters[name]=undefined;delete characters[name];}}

  // ObjClass=1-ObjClass;
  // $('.object'+ObjClass).remove();

}

function RenderObj(p, mapz) { //either merge with RefPlayers or add div name parameter to override "plyrdiv" if needed outside of RefPlayers
  var object=p.obj,f1=null,/*f2=null,*/d=([0,screenT,screenU,screenV,screenW][mapz.charAt(0)]||screenT),D=d.plyrdiv,a0,a1,a2,i;
  if (object.indexOf("-")>-1) { object=object.substr(0,object.indexOf("-")); }
  ObjZ=mapz.substring(2,mapz.length);
  if (p.name==CharName) {
    TokenZ=ObjZ;
  }
  ObjY=Math.floor(ObjZ/MapSizeX1);
  ObjX=ObjZ-(ObjY*MapSizeX1);
  //if (mapz.charAt(0)=='2') { ObjX=ObjX+MapSizeX+1; }
  //if (mapz.charAt(0)=='3') { ObjY=ObjY+MapSizeY+1; }
  //if (mapz.charAt(0)=='4') { ObjX=ObjX+MapSizeX+1; ObjY=ObjY+MapSizeY+1; }
  ObjZ=ObjX+(ObjY*MapSizeX1);
  // ObjX, ObjrY, ObjZ should now be correct in relation to map #1
  p.screenX=ObjX%MapSizeX1;
  p.screenY=ObjY%MapSizeY1;
  if (p.name==CharName) {
    CharPObj=p;
    CharMapObj=d;
    CharToken=p.token;
    CharX=ObjX+(mapz.charAt(0)&1?0:MapSizeX1);
    CharY=ObjY+(mapz.charAt(0)>'2'?MapSizeY1:0);
    CharZ=ObjZ;
    CharObj=object;
    //var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
    //POP("RefPlayers "+Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1));
  }

  f1=new Function("ClickHere("+p.tz+",screen"+" TUVW".charAt(mapz.charAt(0))+");");

  x=(ObjX*32)-16+"px";
  y=(ObjY*32)-32+"px";

  a0=document.getElementById("obj0_"+p.name);
  if (!a0) { a0=document.createElement("img"); a0.setAttribute("id","obj0_"+p.name); }
  p.obj0=a0;
  if(a0.parentNode!=D){D.appendChild(a0);}
  a0.style.pointerEvents="none";
  a0.onmousedown=f1;
  //a0.onmouseover=f2;
  a0.style.position="absolute";
  a0.style.left=x;
  a0.style.top=y;
  a0.style.visibility="visible";
  a0.style.zIndex=100;
  a0.className = "obj0 object";
  e=DirChar+'/CHR'+object.charAt(0)+object.charAt(2)+object.charAt(3)+'.gif';
  if (a0.src != e) { a0.setAttribute("src",e); }

  a1=document.getElementById("obj1_"+p.name);
  if (!a1) { a1=document.createElement("img"); a1.setAttribute("id","obj1_"+p.name); }
  p.obj1=a1;
  if(a1.parentNode!=D){D.appendChild(a1);}
  a1.style.pointerEvents="none";
  a1.onmousedown=f1;
  //a1.onmouseover=f2;
  a1.style.position="absolute";
  a1.style.left=x;
  a1.style.top=y;
  a1.style.visibility="visible";
  a1.style.zIndex=100;
  a1.className = "obj1 object";
  e=DirChar+'/CHRH'+object.charAt(0)+object.charAt(1)+object.charAt(3)+'.gif';
  if (a1.src != e) { a1.setAttribute("src",e); }

  Wearing=object.substring(4,object.length);

  if ((i=Wearing.indexOf("L"))>-1||(i=Wearing.indexOf("M"))>-1) {
    a2=document.getElementById("obj2_"+p.name);
    if (!a2) { a2=document.createElement("img"); a2.setAttribute("id","obj2_"+p.name); }
    p.obj2=a2;
    if(a2.parentNode!=D){D.appendChild(a2);}
    a2.style.pointerEvents="none";
    a2.onmousedown=f1;
    //a2.onmouseover=f2;
    a2.style.position="absolute";
    a2.style.left=x;
    a2.style.top=y;
    a2.style.visibility="visible";
    a2.style.zIndex=100;
    a2.className = "obj2 object";
    e=DirChar+'/CHI'+Wearing.substring(i,i+2)+object.charAt(3)+".gif";
    if (a2.src != e) { a2.setAttribute("src",e); }
  } else {
    if (document.getElementById("obj2_"+p.name)) { D.removeChild(document.getElementById("obj2_"+p.name)); }
  }

}
function AddItem(a) {
  POP(a);
}
function SelectChar(a) {
  PopForce="visible";
  RChar="";
  Game="<p align=center>";
  if (a.substring(0,3)=="new") {
    Game=Game+"Are you <a href=javascript:Null(); onmousedown=\"SelectChar(\'M\');\">MALE</a> or <a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'F\');\">FEMALE</a>?";
  } else {
    if (a=="M" || a=="F") {
      Game=Game+"Select Hair Style:<p align=center>";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"1\');\"><img src="+DirChar+"/CHRH"+a+"1R.gif border=0 height=128 width=128></a> ";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"2\');\"><img src="+DirChar+"/CHRH"+a+"2R.gif border=0 height=128 width=128></a> ";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"3\');\"><img src="+DirChar+"/CHRH"+a+"3R.gif border=0 height=128 width=128></a> ";
      Game=Game+"<br>";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"5\');\"><img src="+DirChar+"/CHRH"+a+"5R.gif border=0 height=128 width=128></a>";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"6\');\"><img src="+DirChar+"/CHRH"+a+"6R.gif border=0 height=128 width=128></a>";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"4\');\"><img src="+DirChar+"/CHRH"+a+"4R.gif border=0 height=128 width=128></a> ";
      Game=Game+"<a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'"+a+"7\');\"><img src="+DirChar+"/CHRH"+a+"7R.gif border=0 height=128 width=128></a>";

      Game=Game+"<p><a href=javascript:Null(); onmousedown=\"javascript:SelectChar(\'new\');\">BACK</a>";

    } else {
      PopForce="hidden";
      Game="Creating Character...";
      ToDo="char&d="+a+"3";
    }
  }
  POP(Game);
}

function RefMap() {
  var c=MapSizeY1*MapSizeX1,t0=Tileset[0],t1=Tileset[1],t2=Tileset[2],t3=Tileset[3];
  for (z=0; z<c; z++) {
    screenT.childNodes[z].src = DirTile+'/'+t0.substring(z*2,z*2+2)+'.png';
    screenU.childNodes[z].src = DirTile+'/'+t1.substring(z*2,z*2+2)+'.png';
    screenV.childNodes[z].src = DirTile+'/'+t2.substring(z*2,z*2+2)+'.png';
    screenW.childNodes[z].src = DirTile+'/'+t3.substring(z*2,z*2+2)+'.png';
  }
  RMap=0;
}
function RefMap1(s,t) {
  var c=MapSizeY1*MapSizeX1;
  for (z=0; z<c; z++) {
    s.childNodes[z].src = DirTile+'/'+t.substring(z*2,z*2+2)+'.png';
  }
}

function ScrollMap(a,X,Y) {
  // t4 and t5 hold new maps
  var x=X||0,y=Y||0,o,s1,s2;
  if (a=="right") {
    s1=ScrollMap.mv(0,1);//screenT=screenU;Tileset[0]=Tileset[1];items0=items1;static0=static1;
    s2=ScrollMap.mv(2,3);//screenV=screenW;Tileset[2]=Tileset[3];items2=items3;static2=static3;
    screenW=SetTiles(x+2,y+1,Tileset[3]=Tileset[5]);
    scroller.prepend(screenT);//avoid IE zindex issues
    screenU=SetTiles(x+2,y+0,Tileset[1]=Tileset[4]);
    o={scrollLeft:"+="+Map2X};
  }
  if (a=="left") {
    //move over and scroll back, since can't scroll to negative position
    screenT.style.left=screenV.style.left=Map2X+"px";
    screenU.style.left=screenW.style.left=Map2X*2+"px";
    s1=ScrollMap.mv(1,0);//screenU=screenT;Tileset[1]=Tileset[0];
    s2=ScrollMap.mv(3,2);//screenW=screenV;Tileset[3]=Tileset[2];
    screenV=SetTiles(x,y+1,Tileset[2]=Tileset[5]);
    scroller.prepend(screenW);//avoid IE zindex issues
    screenT=SetTiles(x,y,Tileset[0]=Tileset[4]);
    scroller.prepend(screenU);
    scroller.scrollLeft(Map2X);
    o={scrollLeft:0};
  }
  if (a=="down") {
    s1=ScrollMap.mv(0,2);//screenT=screenV;Tileset[0]=Tileset[2];
    s2=ScrollMap.mv(1,3);//screenU=screenW;Tileset[1]=Tileset[3];
    screenV=SetTiles(x,y+2,Tileset[2]=Tileset[4]);
    screenW=SetTiles(x+1,y+2,Tileset[3]=Tileset[5]);
    scroller.prepend(screenT);//avoid IE zindex issues
    scroller.prepend(screenU);
    o={scrollTop:"+="+Map2Y};
  }
  if (a=="up") {
    screenT.style.top=screenU.style.top=Map2Y+"px";;
    screenV.style.top=screenW.style.top=Map2Y*2+"px";
    s1=ScrollMap.mv(2,0);//screenV=screenT;Tileset[2]=Tileset[0];
    s2=ScrollMap.mv(3,1);//screenW=screenU;Tileset[3]=Tileset[1];
    screenT=SetTiles(x,y,Tileset[0]=Tileset[4]);
    screenU=SetTiles(x+1,y,Tileset[1]=Tileset[5]);
    scroller.scrollTop(Map2Y);
    o={scrollTop:0};
  }
  if(o){ScrollMap.q.push(o);}
  if(s1){ScrollMap.q.push($(s1));}
  if(s2){ScrollMap.q.push($(s2));}
  if(scrollmap2){Tileset[4]=Tileset[6];Tileset[5]=Tileset[7];ScrollMap(scrollmap2,x,y);scrollmap2=0;}
  ScrollMap.go();
}
ScrollMap.mv=function(f,t){var k="screen"+"TUVW".charAt(f),r=window[k];window[k]=window["screen"+"TUVW".charAt(t)];Tileset[f]=Tileset[t];
window["items"+f]=window["items"+t];window["items"+t]="";window["static"+f]=window["static"+t];window["static"+t]="";//needs correction in the ajax call?
return r;
}

ScrollMap.q=[];
ScrollMap.go=function(){
  if(ScrollMap.q.length){
    var o=ScrollMap.q.shift();
    if(o.remove){
      o.remove();ScrollMap.go();
    }else{
      scroller.animate(o,scroll_length,ScrollMap.go);
    }
  }else{
    screenT.style.left=screenV.style.left=0;
    screenU.style.left=screenW.style.left=Map2X+"px";
    scroller.scrollLeft(0);
    screenT.style.top=screenU.style.top=0;
    screenV.style.top=screenW.style.top=Map2Y+"px";
    scroller.scrollTop(0);
    if(PendingTileset.length){Tileset=PendingTileset;RefMap();PendingTileset=[];}
  }
}

function ProcessInput(e) {
  if (!e) {e=window.event;}
  if (e.keyCode) {
   i=e.keyCode;
  } else {
   if (e.which) { i=e.which; }
  }
  Shifted=0; if (e.shiftKey) { Shifted=1; }
  if (i==59) { if (Shifted) { i=58; }}
  DecodeKey(i);
  e.returnValue = false; return false;
}

function DecodeKey(i) {
  AStamp(); K=0; //if (VKey) { K=VKey; }
  if (i==27) { ChatLine=""; KCap=0; Chatting=0; } // ### ESCAPE ###
  if (i==8) {
    if (Shifted || ShiftSet) {
      ChatLine=""; KCap=0;
    } else {
      ChatLine=ChatLine.substring(0,ChatLine.length-1); K=8; // ### BACKSPACE ###
    }
  }

  if (CharName.length+ChatLine.length*2+12>255||$("#cursor",parent.document).position().left+showtab.scrollup.width()>showtab.chatinput.width()) { if (i != 13) { i=0; }}

  // left=37 up=38 right=39 down=40

  if (Retreat==0) {
    if (!ToDo) {
      if (i==37) { CharX--; MoveChar("L"); Moves+="l"; MoveZ=0;}
      if (i==38) { CharY--; MoveChar("U"); Moves+="u"; MoveZ=0;}
      if (i==39) { CharX++; MoveChar("R"); Moves+="r"; MoveZ=0;}
      if (i==40) { CharY++; MoveChar("D"); Moves+="d"; MoveZ=0;}
    }
  }

  //POP(i);
  //if (i==77) { Moves="lldlllldlllldll"; POP("lldlllldlllldll"); }

  if (TileMode) {
    AdminTileMode(i);
    //
  } else {

    if (i==32) { K=32; }
    if (i>64 && i<91) { K=i+32; if (Shifted || ShiftSet) { K=i; }}
    if (i>47 && i<58) { K=i; if (Shifted || ShiftSet) { K=i-16; if (K==38) {K=94;} if (K==40) {K=42;} if (K==39) {K=38;} if (K==41) {K=40;} if (K==32) {K=41;} }}

    if (i==50) { if (Shifted || ShiftSet) { K=39; }}
    if (i==187) { K=61; if (Shifted || ShiftSet) { K=43; }}
    if (i==61) { K=61; if (Shifted || ShiftSet) { K=43; }}
    if (i==59) { K=59; }
    if (i==58) { K=58; }
    if (i==186) {K=59; if (Shifted || ShiftSet) { K=58; }}
    if (i==219) { K=91; }
    if (i==221) { K=93; }

    if (i==188) { K=44; if (Shifted || ShiftSet) { K=91; }}
    if (i==190) { K=46; if (Shifted || ShiftSet) { K=93; }}

    //if (i==109) { K=45; }
    if (i==189) { K=45; }
    if (i==191) { if (Shifted || ShiftSet) { K=63; } else { K=47; }}
    if (i==222) { K=39; }
    if (i==107) { K=61; if (Shifted || ShiftSet) { K=43; }}

    if (i==13) {
      if (SendChat=="") {
        if (ChatLine.substring(0,1)=="/") {
          // slash commands
	      ToDo=slashcmd(ChatLine);
		  ChatLine="";
          showtab("enter");// insert close chat window??
        }
        if (CharMuted) {
          clog(CharName+": <font color=red>You Have Been Muted!</font>",Chatting.log);
          ChatLine=""; K=0;
        }
        if (ChatLine) { SendChat=ChatLine;SendChatTo=Chatting; }
        if (!CharMuted) { K=13; if (KCap==0) { ChatLine=""; }}
        if (NewChatLine) {
          ChatLine=NewChatLine;
          NewChatLine="";
        }
      } else {
        K=0;
      }
    }

    if (K>0) {
      if (K>31) {
        ChatLine=ChatLine+String.fromCharCode(+K);
        //if (Admin) { AdminChat(); }
        showtab("chat");
      }
      cinput();
    }
  }
  Shifted=0;
  if (i==1) {
    ShiftSet=1-ShiftSet; Keys(1);
  } else {
    if (ShiftSet) {
     ShiftSet=0; Keys(1);
    }
  }
}
function clog(html,e){if(typeof e!="object"){e=$("#"+e,parent.document)[0];}else{if(e.constructor==$){e=e[0];}}var c=html.replace(/\^([A-Z][0-9a-z]|[A-Z][A-Z][A-Z]+)/g,function(f,i){return i.length<3?'<img title="'+ItemID(i)+'" src="'+DirItem+'/O'+i+'.gif" />':'<img title="'+i.charAt(0)+i.substring(1).toLowerCase()+'" src="'+DirBuild+'/'+i+'.gif" />';});if(e){var h=e.scrollHeight-e.scrollTop-e.clientHeight;while(e.childNodes.length>120){while((e.firstChild.tagName||'')!="BR"){e.removeChild(e.firstChild);}e.removeChild(e.firstChild);}e.innerHTML+=c+"<BR>";if(h<16){e.scrollTop=e.scrollHeight-e.clientHeight;}ScrollbarUpdate();}return c;}
function cinput(b){showtab.chatinput.html(CharName+":&nbsp;"+ChatLine.replace(/ /g,"&nbsp;").replace(/\^([A-Z][0-9a-z])/g,'<img style="height:1.25em;vertical-align:top" src="'+DirItem+'/O$1.gif">').replace(/\^([A-Z][A-Z][A-Z]+)/g,'<img style="height:1.25em;vertical-align:top" src="'+DirBuild+'/$1.gif" />')+"<img id=cursor name=cursor src=\""+DirTile+"/Qf.png\" height=18 width=10 style=\"position:absolute; \"></font></b>"+(b?'&nbsp;&nbsp;<i>'+(b+'').replace(/ /g,"&nbsp;")+'</i>':""));}
function LoadChat(a,b){
  if(!NewChatLine){NewChatLine=ChatLine;}
  ChatLine=a;cinput(b);
  if(!Chatting||!Chatting.metachannel){for(var t in showtab.tabs){if(showtab.tabs[t].metachannel){showtab(t);break;}}}
}
function slashcmd(q){
var a=q.substring(1).split(" "),c=a[0],e=window.encodeURIComponent||window.escape;
if(slashcmd.short[c]){c=slashcmd.short[c];}
if(c=="create"||c=="login"){clog("<font color=red>ERROR: You must be logged out to "+q+"</font>",Chatting.log);return"refresh";}
if(c=="?"||c=="help"){slashcmd.help(a[1]);return"refresh";}
if(a.length==1){return c;}
if(c=="char"){return"char&d="+a[1];}
if(c=="drop"&&a.length==2){return"drop&j="+(a[1].indexOf("-")>=0?a[1]:isNaN(a[1])?CharInven.indexOf(a[1].charAt(0)=="^"?a[1].substring(1):a[1])/2+"-"+a[1]:a[1]+"-"+CharInven.substring(a[1]*2,a[1]*2+2));}
a.shift();
if(c=="add"){
  if(a.length==1){a=a[0].split("-");}
  if(a.length>1&&timenames[a[1]]){a[1]=timenames[a[1]];}
}
if(c=="chat"){return"chat&j="+Chatting.metachannel+"&q="+e(a.join(" "));}//probably useless, really
if(c=='s'&&a.length<2){a.push(30);}//default lifetime for new items
if(c=="inventory"){
if(a.length<3){a.push(30);}//default lifetime for new items
if(a[0].search(/[A-Z][0-9a-z]/)>=0){for(var i=0;i<CharInven.length;i+=2){if(CharInven.substring(i,i+2)=="Za"){a=[i/2,a[0],a[1]];break;}}}
//if(c=="tele"){return"tele&d="+a[1];}
}
return c+"&j="+e(a.join("-"));
}
slashcmd.help=function(h){var a,c=h,e;showtab.tmp=0;
	if(h){
		e="Help for "+c+(slashcmd.short[c]?' ('+(c=slashcmd.short[c])+')':'')+":<br>"+(slashcmd.man[c]||(isMod(1)&&slashcmd.key[c])||"Sorry, I don't have help for "+c);
	}else{
		a=[];if(isMod(1)){for(var i in slashcmd.key){a.push("<a href=javascript:slashcmd.help('"+i+"')>"+i+"</a>");}}for(var i in slashcmd.man){a.push("<a href=javascript:slashcmd.help('"+i+"')>"+i+"</a>");}
		e="Commands: "+a.join(", ")+" (enter a command after '/help ' for more information, i.e. '<a href=javascript:slashcmd.help('help')>/help help</a>')";
	}
	a=[];for(var i in slashcmd.short){if(slashcmd.short[i]==c){a.push(i);}}
	clog('<font style="color:green">'+e+(a.length?"<br>Also called: "+a.join(', '):'')+'</font>',Chatting.log);
};
slashcmd.key={
	tile:"Change map tile<br>Syntax: /tile <i>tilecode</i><br>The tilecode is a capital letter followed by a digit from 0-9 or a lowercase letter. Tilecodes can be found in the <a target=_BLANK href=\"[htmlurl]/11-gfx/11-viewer.htm?T=T&S=A&E=Z\">Graphics Viewer</a>.",
	inventory:"Add item to blank space in inventory<br>Syntax: /inventory [<i>slot#</i>] <a href=javascript:slashcmd.help('itemid')>itemid</a> [<i>seconds</i>]<br>Only itemid is required",
	add:"Add static item<br>Syntax: /add <a href=javascript:slashcmd.help('itemid')>itemid</a> <i>new item lifetime</i><br>Building: /add <a href=javascript:slashcmd.help('BUILDID')>BUILDID</a><br>NPC: /add <i>NPCName</i> <i>appearance</i><br>See also <a href=javascript:slashcmd.help('delete')>/help delete</a>",
	tele:"Teleport<br>Syntax: /tele <i>screenid</i>-<i>z</i>",
	"delete":"Add static item<br>Syntax: /delete <a href=javascript:slashcmd.help('itemid')>itemid</a><br>See also <a href=javascript:slashcmd.help('add')>/help add</a>"
};
slashcmd.man={
	char:"Change appearance<br>Syntax: /char {sex:M/F}{head/arm id}{clothing id}<br>In each {} pair is one letter or digit, only the first uppercase. If they are all letters, it makes a sort of three-letter capitalized word.<br>Note: Characters turn to face right when changing appearance in this way.",
	drop:"Drops an item from the inventory<br>Syntax: /drop <i>invslot#</i> <a href=javascript:slashcmd.help('itemid')>itemid</a><br>&nbsp; &nbsp; &nbsp; &nbsp; /drop <i>invslot#</i><br>&nbsp; &nbsp; &nbsp; &nbsp; /drop <a href=javascript:slashcmd.help('itemid')>itemid</a><br><i>invslot#</i> (0-"+(NumInven-1)+") top left is numbered 0, bottom right is "+(NumInven-1)+"<br><i>itemid</i> help can be found by entering '<a href=javascript:slashcmd.help('itemid')>/help itemid</a>'",
	get:"Picks up an item and places it in your inventory<br>Syntax: /get <a href=javascript:slashcmd.help('itemid')>itemid</a><br><a href=javascript:slashcmd.help('itemid')>itemid</a> help can be found by entering '<a href=javascript:slashcmd.help('itemid')>/help itemid</a>'",
	help:"Returns help for a command<br>Syntax: /help [<i>command</i>]<br>Omit <i>command</i> for a list of commands.",
	logout:"Log out of the server<br>Syntax: /logout",
	refresh:"Refreshes the display<br>Syntax: /refresh<br>While chatting, screen updating may be slowed. This command asks the server to ignore chat for one second to update the screen immediately.",
	remove:"Removes a worn item<br>Syntax: /remove <a href=javascript:slashcmd.help('itemid')>itemid</a><br><a href=javascript:slashcmd.help('itemid')>itemid</a> help can be found by entering '<a href=javascript:slashcmd.help('itemid')>/help itemid</a>'<br>See also '<a href=javascript:slashcmd.help('wear')>/help wear</a>'",
	static:"Interact with static item<br>Syntax: /static <i>{<a href=javascript:slashcmd.help('itemid')>itemid</a>|<a href=javascript:slashcmd.help('BUILDID')>BUILDID</a>|NPC code}</i><br><a href=javascript:slashcmd.help('itemid')>itemid</a> and <a href=javascript:slashcmd.help('itemid')>itemid</a> help can be found by entering '<a href=javascript:slashcmd.help('itemid')>/help itemid</a>' or '<a href=javascript:slashcmd.help('BUILDID')>/help BUILDID</a>'<br>NPC code help not yet provided. Use the context menus, instead.",
	wear:"Wears an item<br>Syntax: /wear <a href=javascript:slashcmd.help('itemid')>itemid</a><br>The item must be in your inventory.<br>'<a href=javascript:slashcmd.help('itemid')>itemid</a>' help can be found by entering '<a href=javascript:slashcmd.help('itemid')>/help itemid</a>'<br>See also <a href=javascript:slashcmd.help('remove')>/help remove</a>",
	'^':'Chat Image<br>Syntax:<br>Item: ^<a href=javascript:slashcmd.help("itemid")>itemid</a><br>Building: ^<a href=javascript:slashcmd.help("BUILDID")>BUILDID</a><br>This lets you place the image in chat, or preview it when using many of these commands.',
	itemid:"Every item has an id.<br>Syntax: {Uppercase letter}{lowercase letter}<br>In chat, you can optionally precede an item id with the <a href=javascript:slashcmd.help('^')>^ symbol</a> to show the item's picture. This can be used in most commands, as well, to make sure the id is correct. If not, simply backspace. You can find item ids listed in the <a target=_BLANK href=\"[htmlurl]/11-gfx/11-viewer.htm?T=I&S=A&E=Z\">Graphics Viewer</a>.",
	BUILDID:"Every building has an id<br>Syntax: UPPERCASENAME<br>In chat, you can optionally precede a building id with the <a href=javascript:slashcmd.help('^')>^ symbol</a> to show the building's picture. This can be used in most commands, as well, to make sure the id is correct. If not, simply backspace."
};
slashcmd.short={"?":"help",a:"add",d:"delete",del:"delete",i:"inventory",item:"inventory",newitem:"inventory",teleport:"tele",t:"tele"};

//util
function Drag(E,soX,soY,f,minX,minY,maxX,maxY,xX,xY,fe){
var moX=E.pageX,moY=E.pageY,t,
mousemove=function(e){f(Math.min(maxX,Math.max(minX,(e.pageX-moX)*xX+soX)),Math.min(maxY,Math.max(minY,(e.pageY-moY)*xY+soY)));AStamp();},
mouseup=function(e){$(document).off("mouseup mousemove");$(parent.document).off("mouseup mousemove");if(E.srcElement){E.srcElement.ondragstart=parent.document.onselectstart=document.onselectstart=null;}if(fe){fe(e);}},
frame=$('iframe',parent.document);
if(!minX){minX=0;}if(!minY){minY=0;}
if(typeof maxX!="number"){maxX=Infinity;}if(typeof maxY!="number"){maxY=Infinity;}
if(maxX<minX){t=maxX;maxX=minX;minX=t;}
if(maxY<minY){t=maxY;maxY=minY;minY=t;}
if(!xX){xX=1;}if(!xY){xY=1;}
if(parent!=self){$(document).on({mousemove:function(e){e.pageX+=frame.offset().left;mousemove(e);},mouseup:mouseup});}
$(parent.document).on({mousemove:mousemove,mouseup:mouseup});
document.body.focus();//avoid text selection
if(E.srcElement){E.srcElement.ondragstart=parent.document.onselectstart=document.onselectstart=ReturnFalse;}//prevent image drag and text selection in IE
return false;//prevent text selection in other browsers by returning false from main event handler (return this thru)
}
function ChatResize(e){var c=showtab.main,b=[],i,t,o=c.offset();o.width=c.width();o.height=c.height();if(e.data.h){for(i in showtab.tabs){if((t=showtab.tabs[i].log)&&t.prop("scrollHeight")-t.scrollTop()-t.height()<16){b.push(t);}}}return Drag(e,o.width,o.height,function(x,y){if(e.data.w){if(e.data.w<0){c.offset({left:o.left+o.width-x});}c.width(x);}if(e.data.h){if(e.data.h<0){c.offset({top:o.top+o.height-y});}c.height(y);ScrollbarUpdate();}},showtab.menu.width()+showtab.redx.width()+16,showtab.scrollup.height()*8,e.data.w<0?o.left+o.width:$(parent.document).width()-o.left,e.data.h<0?o.top+o.height:"$(parent.document).height()-o.top",e.data.w||1,e.data.h||1,function(){if(e.data.h){for(var i=0;i<b.length;i++){b[i].scrollTop(b[i].prop("scrollHeight")-b[i].height());}ScrollbarUpdate();}Cookie.set("chatwidth",showtab.main.width());Cookie.set("chatheight",showtab.main.height());if(e.data.w<0||e.data.h<0){i=showtab.main.offset();Cookie.set("chatleft",i.left);Cookie.set("chattop",i.top);}});};
function ScrollbarUpdate(){
 var r=Chatting;
 if(r.scrollbarUpdate){
    r.scrollbarUpdate();
 }else{
  if(r&&(r=r.log)){
   var g=showtab.scrollbox,h=r.prop("scrollHeight"),i=r.height(),j=$(g[0].parentNode).height(),k=j*i/h;
   g.height(k).css({top:k<j?(j-k)*r.scrollTop()/(h-i):0});
}}}
function showtab(m){
if(m=="enter"){if(showtab.tmp){m='';}else{return;}}
if(m=="chat"){if(Chatting&&Chatting.metachannel){return;}showtab.tmp=1;for(var t in showtab.tabs){if(showtab.tabs[t].metachannel){m=t;break;}}}
if(m=="default"){m=showtab.tab||"Notices";}
showtab.tab=m;
if(!m){showtab.tmp=0;return Chatting=0;}
Chatting=showtab.tabs[m];
var i,p=showtab.main[0],r=" ";
for(i in showtab.tabs){r+=i==m?i+' | ':'<a href="javascript:showtab(\''+i+'\')">'+i+'</a> | ';}
showtab.menu.html(r);
for(i=6;i<p.childNodes.length;i++){if(p.childNodes[i].id){p.childNodes[i].style.visibility=showtab.tabs[m]&&showtab.tabs[m][p.childNodes[i].id]?"":"hidden";}}
ScrollbarUpdate();
p.style.visibility="visible";
}
showtab.tabs={Game:{GAMEPOP:1,SCROLLUP:3,SCROLLBAR:4,SCROLLDN:5,RESIZEBOX:6,initHTML:function(){return'<p style="text-align:center">Have fun playing!</p>';}},Global:{GLOBALLOG:1,CHATINPUT:2,metachannel:"global",SCROLLUP:3,SCROLLBAR:4,SCROLLDN:5,RESIZEBOX:6},Team:{TEAMLOG:1,initHTML:function(){return'<p style="text-align:center"><br>Welcome to the team channel!<br><br>Discuss teams and strategy.<br><br>Wear a team hat<br>to join the team of that color.<br><br>Have fun!<br></p>';},CHATINPUT:2,metachannel:"team",SCROLLUP:3,SCROLLBAR:4,SCROLLDN:5,RESIZEBOX:6},/*Balloons:{BALLOONS:1,BALLOONLOG:2},*/Notices:{POPLOG:1,initHTML:function(){return'Logging in as '+CharName+"...";},SCROLLUP:3,SCROLLBAR:4,SCROLLDN:5,RESIZEBOX:6}};
showtab.tab="";
showtab.Logout=function(){ToDo='logout';POP('Logging out...');};
showtab.close=function(){Chatting=0;};
showtab.hub=self;
parent.showtab=showtab;
iniChat();
function POVER(html){showtab.tabs.Game.log.html(html.replace(/javascript:NPC/g,"javascript:showtab.hub.NPC"));showtab('Game');}
function iniChat(){
if(!Cookie.ready){return setTimeout(iniChat,100);}//wait for Web SQL
var o={},edge=0.2,line=1.25,a=[edge+"em",line+edge+"em",line*2+edge+"em",line*3+edge+"em"];edge+="em";line+="em";var
ewEdge={ top:0,bottom:0, width:edge,cursor:"ew-resize"},
nwEdge={ top:0, right:0,backgroundColor:"#90FF90",position:"absolute",overflow:"hidden"},
nsEdge={left:0, right:0,height:edge,cursor:"ns-resize"},
seEdge={left:0,bottom:0,backgroundColor:"#70eF70",position:"absolute",overflow:"hidden"},
pane={position:"absolute",backgroundColor:"#ffffd0",cursor:"auto",overflow:"hidden"},
log={left:edge,top:a[1],right:a[1]};
showtab.main=$('<DIV id=CHAT/>').css({visibility:"hidden",position:"absolute",backgroundColor:"#80FF80",cursor:"move",zIndex:255,fontFamily:"arial",fontWeight:"bold",color:"navy"})
.append(o.n=$("<div/>").css(nsEdge).css(nwEdge).on("mousedown",{h:-1},ChatResize))
.append(o.s=$("<div/>").css(nsEdge).css(seEdge).on("mousedown",{h:1},ChatResize))
.append(o.e=$("<div/>").css(ewEdge).css(seEdge).on("mousedown",{w:-1},ChatResize))
.append(o.w=$("<div/>").css(ewEdge).css(nwEdge).on("mousedown",{w:1},ChatResize))
.append(showtab.menu=$("<div/>").css(pane).css({top:a[0],left:a[0],height:line,color:"black"}))
.append(showtab.redx=$("<div/>").css(pane).css({top:a[0],height:line,right:a[0],color:"red"}).html('<a href="javascript:showtab.Logout()">Logoff</a> | <a href="javascript:showtab.close()">Close</a>'))
.append(showtab.tabs.Global.log=$('<div id="GLOBALLOG"/>').css(pane).css(log).css({bottom:a[1]}))
.append(showtab.tabs.Team.log=$('<div id="TEAMLOG"/>').css(pane).css(log).css({bottom:a[1]}))
.append(showtab.tabs.Notices.log=$('<div id="POPLOG"/>').css(pane).css(log).css({bottom:a[0]}))
.append(showtab.tabs.Game.log=$('<div id="GAMEPOP"/>').css(pane).css(log).css({bottom:a[0]}))
/*
<div id="BALLOONLOG" class="left0 top1 right0" style="bottom:50%;overflow:auto">List of things characters have said using these balloons</div>
<div id="BALLOONS" class="left0 bottom0 right0" style="top:50%;overflow:auto;border-top:1px dotted green">List of things player can say above head</div>
*/
.append(showtab.scrollup=$('<img id="SCROLLUP" src="[htmlurl]/11-gfx/CHATUP.gif">').css(pane).css({height:line,width:line,top:a[1],right:a[0],cursor:"n-resize"}).on("mousedown",function(e){if(Chatting&&Chatting.log){Chatting.log.scrollTop(Chatting.log.scrollTop()-showtab.scrollup.height());ScrollbarUpdate();}}))
.append(
	showtab.scrollbar=$('<div id="SCROLLBAR"/>')
	.css(pane).css({cursor:"ns-resize",width:line,top:a[2],right:a[0],bottom:a[2]})
	.append(
		showtab.scrollbox=$('<div id="SCROLLBOX"/>')
		.css({position:"absolute",right:0,width:line,backgroundColor:"#80ff80",cursor:"ns-resize"})
		.on("mousedown",function(E){var b=showtab.scrollbox,min=0,max=$(b[0].parentNode).height()-b.height()/*-end*/,d=Chatting.log;return d?Drag(E,0,b.position().top,function(x,y){b[0].style.top=y+"px";d.scrollTop((d.prop("scrollHeight")-d.height())*(y-min)/(max-min));},0,min,0,max,1,1):false;})
	).on("mousedown",function(e){if(Chatting&&Chatting.log){Chatting.log.scrollTop(Chatting.log.scrollTop()+Math.max(1,Chatting.log.height()-showtab.scrollup.height())*(e.pageY<showtab.scrollbox.offset().top?-1:1));ScrollbarUpdate();}})
)
.append(showtab.scrolldn=$('<img id="SCROLLDN" src="[htmlurl]/11-gfx/CHATDOWN.gif">').css(pane).css({height:line,width:line,right:a[0],bottom:a[1],cursor:"s-resize"}).on("mousedown",function(e){if(Chatting&&Chatting.log){Chatting.log.scrollTop(Chatting.log.scrollTop()+showtab.scrolldn.height());ScrollbarUpdate();}}))
.append($('<img id="RESIZEBOX" src="[htmlurl]/11-gfx/t/If.png">').css(pane).css({height:line,width:line,bottom:a[0],right:a[0],cursor:"nwse-resize"}).on("mousedown",{w:1,h:1},ChatResize))
.append(showtab.chatinput=$('<div id="CHATINPUT"/>').css(pane).css({height:line,left:a[0],bottom:a[0],right:a[1]}))
.width(Cookie.get("chatwidth")||Math.round(Map2X*2*.8))
.height(Cookie.get("chatheight")||Math.round(Map2Y*2*.6))
.appendTo(parent.document.body)
.offset({left:Cookie.get("chatleft")||Math.round($(parent.document).width()/2-Map2X*.8),top:Cookie.get("chattop")||Math.round(Map2Y*2*.2)})
.on("mousedown",function(e){if(e.target==e.delegateTarget){var p$=$(e.delegateTarget),p=p$.offset(),d$=$(parent.document);return Drag(e,p.left,p.top,function(x,y){p$.offset({left:x,top:y});},0,0,d$.width()-p$.width(),"d$.height()-p$.height()",1,1,function(){var t=showtab.main.offset();Cookie.set("chattop",t.top);Cookie.set("chatleft",t.left);});}});
if(showtab.main.width()!=o.n.width()){//IE workaround
	var em=showtab.scrollup.height()/1.25,ResizeChat=function(){r2(showtab.main);},r2=function(e){
		var i,a=e[0].childNodes,j;
		for(i=0;i<a.length;i++){
			j=$(a[i]);
			if(a[i].style.top&&a[i].style.bottom){j.height(e.height()-em*(parseFloat(a[i].style.top)+parseFloat(a[i].style.bottom)));}
			if(a[i].style.left&&a[i].style.right){j.width(e.width()-em*(parseFloat(a[i].style.left)+parseFloat(a[i].style.right)));}
		}
	};
	showtab.main[0].onresize=ResizeChat;
	ResizeChat();
}
cinput();
if (1) {
	if (document.layers) {
		document.captureEvents(Event.MOUSEDOWN);
		document.onmousedown = function (e) {
			if (e.which == 3 && e.target
				 && (!e.target.tagName
					 || e.target.tagName == "A")) {
				e.target.click();
			}
			e.preventDefault();
			return false;
		};
		document.oncontextmenu = ReturnFalse;
	} else {
		document.oncontextmenu = function (e) {
			if (e) {
				if (e.target
					 && (!e.target.tagName
						 || e.target.tagName == "A")) {
					e.target.click();
				}
				e.preventDefault();
			}
			return false;
		};
	}
}}

function CancelKey(evt) {
  var evt = (evt) ? evt : ((window.event) ? window.event : "");
  evt.returnValue = false; evt.preventDefault&&evt.preventDefault(); return false;
  // if (!e) {} else { e.returnValue = false; }
}
function ReturnFalse(){return false;}
function Null() { }

function MoveChar(d) {
  //if (TileMode) {
  //  var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
  //  NewTile=Tileset[screen].charAt(CharZ*2)+Tileset[screen].charAt((CharZ*2)+1);
  //  POP(NewTile);
  //}
}


function OldMoveChar(d) {
  x=(CharX*32)-16; y=(CharY*32)-32;
  if(d&&CharObj.charAt(3)!=d)CharObj=CharObj.substring(0,3)+d+CharObj.substring(4);
  if (document.getElementById("obj0_"+CharName)) {
    a0=document.getElementById("obj0_"+CharName);
    e=DirChar+'/CHR'+CharObj.charAt(0)+CharObj.charAt(2)+CharObj.charAt(3)+'.gif';
    if (a0.src != e) { a0.setAttribute("src",e); }
    a0.style.left=x+"px";
    a0.style.top=y+"px";
  }
  if (document.getElementById("obj1_"+CharName)) {
    a1=document.getElementById("obj1_"+CharName);
    e=DirChar+'/CHRH'+CharObj.charAt(0)+CharObj.charAt(1)+CharObj.charAt(3)+'.gif';
    if (a1.src != e) { a1.setAttribute("src",e); }
    a1.style.left=x+"px";
    a1.style.top=y+"px";
  }
}

function HPOP() {
  document.getElementById("PopUp").style.visibility="hidden";
  Keyboard="";
}

function POP(a,align) {
 if(!CharPswd){return;}//prevent login screen disappearance
 var p=$("#PopUp");
 p.css("visibility","hidden").offset({top:0,left:0}).html("<center><b>"+a+"</b></center>");

 switch (align||PopAlign) {
  case "char":
   PopY=TopYPos+(CharY*32)+8; PopX=TopXPos+(CharX*32)+32;
   if (PopY<TopYPos) { PopY=TopYPos; } if (PopY<TopYPos+10) { PopY=TopYPos+10; }
   if (PopX<TopXPos) { PopX=TopXPos; } if (PopX<TopXPos+10) { PopX=TopXPos+10; }
   break;
  case "center":
   PopX=TopXPos+((896-p[0].scrollWidth)/2);
   PopY=TopYPos+((512-p[0].scrollHeight)/2);
   break;
  case "click":
   PopY=Math.floor(PopClick/ViewWide);
   PopX=PopClick-(PopY*ViewWide);
   PopY=(PopY*32)+22;
   PopX=(PopX*32)+22;
   // alert(PopClick+" "+PopY+" "+PopX);
   break;
 }
   if (PopX+p[0].scrollWidth>TopXPos+896) { PopX=(TopXPos+896)-p[0].scrollWidth; }
   if (PopY+p[0].scrollHeight>TopYPos+512) { PopY=(TopYPos+512)-p[0].scrollHeight; }
   if (PopY<TopYPos) { PopY=(TopYPos);  }
 p.offset({top:PopY,left:PopX}).css("visibility","visible");
}

//view-menu
function DisplayInven() {
  var t,o={},p={};
  SB="<p align=center>";
  for (i=0;i<NumInven;i++) {
    t=CharInven.substring(i*2,i*2+2);
    SB=SB+"&nbsp;<img id=\"Inv"+i+"\" src=\""+DirItem+"/O"+t+".gif\" height=32 width=32 ";
    SB=SB+"onmousedown=\"ClickInven(\'"+i+"-"+t+"\');\" ";
    bg="#ffffd0";
    if (isWearing(t)&&!o[t]) { bg="#80FF80"; o[t]=1; }
    if (Bait==t&&!p[t]) { bg="#80FF80"; p[t]=1; }
    SB=SB+" style=\"background-color: "+bg+"\" border=1>&nbsp;";
    if ((i+1)/6==Math.floor((i+1)/6)) { SB=SB+"<br>"; }
  }
  ///document.getElementById("Inv"+i).style.backgroundColor=bg;
  return SB;
}

//view-menu
function RefreshInven() {
  RInven=0;  if (!CharH) { CharH=0; } a=100-CharH;
  SB=CharName+'<p>Health: <img src="'+DirItem+'/OZn.gif" height=12 width='+CharH+'><img src="'+DirItem+'/OZo.gif" height=12 width='+a+'>';
  if (CharInven.indexOf("Zd")>-1) { SB=SB+"<br>CharMap: "+CharMap+"-"+CharZ; }  
  SB=SB+"<p>"+DisplayInven();
  SB=SB+'<p><a href="javascript:showtab(\'default\')">Logs</a> &nbsp; <a href="javascript:ToDo=\'reset\';POP(\'Resetting...\');">Reset</a>  &nbsp; <a href="javascript:ToDo=\'logout\';POP(\'Logging out...\');">Logoff</a>';
  POP(SB);
}

//util
function isWearing(item) {
  // returns true if player is wearing item
  a=CharObj.substring(4,CharObj.length);
  if (a.indexOf(item)>-1) {
    return 1;
  } else {
    return 0;
  }
}
//util
function isMod(s){return s&&CharName==ServerName||CharInven.indexOf(isMod.key)>=0;}
isMod.key="Zd";

//chat
function TeamChatInit(){if(characters[CharName]&&characters[CharName].obj==CharObj){var t=TeamColor();clog((t?'<font color='+t+'>':'')+"You are currently in the "+(t||"teamless")+" channel."+(t?'</font>':''),"TEAMLOG");}else{setTimeout(TeamChatInit,tick);}}

//util
function TeamColor(){var m=CharObj.substring(4).match(/L([0-6])/);return m&&["black","blue","red","green","yellow","purple","orange"][+m[1]]||"";}

//welcome
function ShowServers() {
  SB="<p align=center>Select Server To Play:<p>";
  for (i=0;i<servers.length;i++) {
    if(servers[i]==CharName){SB+="<b>";}
    SB=SB+"<a href=javascript:SelectServer(\""+servers[i]+"\");>"+servers[i]+"</a><br>";
    if(servers[i]==CharName){SB+="</b>";}
  }
  HittingIt=0;
  POP(SB);
}

// Welcome
function SelectServer(a) {
  ServerName=a;
  ToDo="login";
  IStamp=(+new Date)+50000;
  if(!HittingIt){HitIt();}
}

function Logout(msg) {

}

function Static() {
  ToDo="static&j=L0";
  POP("Add Static Item");
}

function AddStatic(a) {
  Game="<center><p><font color=#006000><b>Add Static Item:</b></font><p>";
  if (a) {
    Game=Game+"Adding "+ItemID(a)+"...";
    ToDo="add&j="+a;
  } else {
    Game=Game+"<a href=\"javascript:LoadChat('/add ^','[itemid] [new item lifetime]')\">/add ...</a><br>";
    Game=Game+"<a href=javascript:AddPier('');>Add Pier</a><br>";
    Game=Game+"<a href=javascript:AddStatic('CITY');>CITY</a><br>";
    Game=Game+"<a href=javascript:AddStatic('DOOR');>DOOR</a><br>";
    Game=Game+"<a href=javascript:AddStatic('TPORT');>TPORT</a><br>";
    Game=Game+"<a href=javascript:AddStatic('CART');>CART</a><br>";
    Game=Game+"<a href=javascript:AddStatic('WELL');>WELL</a><br>";
    Game=Game+"<a href=javascript:AddStatic('FOUNTAIN');>FOUNTAIN</a><br>";
    Game=Game+"<a href=javascript:AddStatic('Sa-300');>"+ItemID("Sa")+"</a><br>";
  }
  POP(Game);
}

function AddPier(a) {
  Game="<center><p><font color=#006000><b>Add Static Item:</b></font><p>";
  if (a) {
    ToDo="add&j=Zg-"+a;
    Game=Game+"Adding Pier with "+ItemID(a)+"...";  
  } else {
    Game=Game+"Select Fish To Catch:<p>";
    // add hover alt tag with ItemID here maybe??
    for (i=97;i<113;i++) {
      Game=Game+"<a href=\"javascript:AddPier('G"+String.fromCharCode(i)+"');\"><img src=\""+DirItem+"/OG"+String.fromCharCode(i)+".gif\" height=32 width=32></a> ";
      if (i==104) { Game=Game+"<br>"; }
    }
    Game=Game+"<p><a href=\"javascript:AddPier('GZa');\">Nothing</a><p>";
  }
  POP(Game);
}

function NPCCeleste(a) {
  Game="<center><p><font color=#006000><b>Celeste:</b></font><p>";
  if (a==1) {
    Game=Game+"Yes, if you login to the<br>demo server you can edit maps,<p>";
    Game=Game+"To change a tile, first get a<br>sysop key by entering /key in the chat.<p>";
    Game=Game+"Then click the key in your inventory<br>to Enter Tile Edit Mode.<p>";
    Game=Game+"<p><a href='javascript:NPCCeleste(2);'>What are valid tiles?</a><p>";
    Game=Game+"<p><a href='javascript:NPCCeleste(4);'>How does this Sysop Key work?</a><p>";
  } else {
    if (a==2) {
      Game=Game+"A tile consists of two characters, the first<br>being a capital letter and the second being a numeral.<p>";
      Game=Game+"For example, the tile G0 is the<br>default grass tile and G1 is grass with weeds.<p>";
      Game=Game+"<a href='javascript:showtab.close();'>Okay thanks!</a><p>";
      Game=Game+"<p><a href='javascript:NPCCeleste(3);'>Is there a list of tiles?</a><p>";
      Game=Game+"<p><a href='javascript:NPCCeleste(4);'>How does this Sysop Key work?</a><p>";
    } else {
      if (a==3) {
        Game=Game+"Yes. if you download the source code<br>you can load the viewer.htm script and see the entire graphics library.<p>";
        Game=Game+"<a href='javascript:showtab.close();'>Okay thanks!</a><p>";
        Game=Game+"<p><a href='javascript:NPCCeleste(4);'>How does this Sysop Key work?</a><p>";
      } else {
        if (a==4) {
          Game=Game+"The Sysop Key will last for<br>a limited time and then disappear.<p>";
          Game=Game+"Eventually, the demo will be reset and<br>players will only get a key on thier own server.<p>";
          Game=Game+"Until the reset, you can get a new key<br>by entering /key in the chat.<p>";
          Game=Game+"<a href='javascript:showtab.close();'>Okay thanks!</a><p>";
          Game=Game+"<p><a href='javascript:NPCCeleste(3);'>Is there a list of tiles?</a><p>";
        } else {  
          Game=Game+"Welcome Player!";
          Game=Game+"<p><a href='javascript:NPCCeleste(1);'>I heard we can edit maps?</a><p>";
        }
      }
    }
  }
  POVER(Game);
}

function NPCKing(a) {
  Game="<center><p><font color=#006000><b>King:</b></font><p>";
  if (a==1) {
    Game=Game+"It was Joe - he went crazy!";
    Game=Game+"<p>Ranting and raving...<br>declared Anarchy the winner of Queville!";
    Game=Game+"<p>As such, he says Queville will no longer<br>be ruled by a king and seized all my gold!!";
    Game=Game+"<p><a href='javascript:NPCKing(2);'>I dont get it,<br>what does gold have<br>to do with anarchy??</a><p>";
  } else {
    if (a==2) {
      Game=Game+"He said anarchy is the absence<br>of government, and that government<br>exists for one reason and one reason only:";
      Game=Game+"<p>money.<p>No money, no government. Anarchy.<p>";
      Game=Game+"<p><a href='javascript:NPCKing(3);'>Thats crazy!!</a><p>";
    } else {
      if (a==3) {
        Game=Game+"Thats what I said!!<p>None-the-less, Anarchy has<br>been declared the winner of Queville.";
        Game=Game+"<p><a href='javascript:NPCKing(4);'>What are we going<br>to do without gold??</a><p>";
      } else {
        if (a==4) {
          Game=Game+"I don't know,<br>you will have to ask Joe.<p>";
          Game=Game+"He should be in his programming<br>room, but nobody knows how to access it yet.<p>";
        } else {
          Game=Game+"Welcome to Queville!";
          Game=Game+"<p><a href='javascript:NPCKing(1);'>What happened<br>to the sundial?</a><p>";
        }
      }
    }
  }
  POVER(Game);
}

function NPCJoe(a) {
  Game="<center><p><font color=#006000><b>Joe:</b></font><p>";
  if (a==1) {
    Game=Game+"The computer with my Queville<br>source code crashed so I am moving it<br>to the new Dragon Basher game engine.<p>";
    Game=Game+"It will be an entierly differnt game here.";
    Game=Game+"<p><a href='javascript:NPCJoe(2);'>How so??</a><p>";
  } else {
    if (a==2) {
      Game=Game+"It will be bigger,<br>better,and more fun. : )<p>";
    } else {
      Game=Game+"Hey there player!<p>Welcome to Queville,<br>home of the Dragon Basher.";
      Game=Game+"<p><a href='javascript:NPCJoe(1);'>What is going on here??</a><p>";
    }
  }
  POVER(Game);
}

function FARMHOUSE(a) {
  Game="<center><p><font color=#006000><b>Joe:</b></font><p>";
  if (a==1) {
    Game=Game+"Tomato";
  } else {
    Game=Game+"We have seeds<br>you can plant.<p>";
    Game=Game+"<p><a href='javascript:FARMHOUSE(1);'>Tomato</a><p>";
  }
  POVER(Game);
}
function CLOTHES(a) {
 if (a==0) {
  b=InitalObj.substring(0,1);
  t="<p align=center>Select Clothes:<p align=center>";
  if (CharMap=="B2e" || CharMap=="A2e") {
   t=t+"<a href=javascript:Null(); onmousedown=javascript:CLOTHES(\"1\");><img src="+DirChar+"/CHR"+b+"1R.gif border=0 height=48 width=48></a>";
   t=t+"<a href=javascript:Null(); onmousedown=javascript:CLOTHES(\"2\");><img src="+DirChar+"/CHR"+b+"2R.gif border=0 height=48 width=48></a>";
   t=t+"<a href=javascript:Null(); onmousedown=javascript:CLOTHES(\"3\");><img src="+DirChar+"/CHR"+b+"3R.gif border=0 height=48 width=48></a>";
   t=t+"<a href=javascript:Null(); onmousedown=javascript:CLOTHES(\"4\");><img src="+DirChar+"/CHR"+b+"4R.gif border=0 height=48 width=48></a>";
   t=t+"<a href=javascript:Null(); onmousedown=javascript:CLOTHES(\"5\");><img src="+DirChar+"/CHR"+b+"5R.gif border=0 height=48 width=48></a>";
   t=t+"<br><img src="+DirTile+"/BLANK.gif height=32 width=8>";
   t=t+"<img src="+DirItem+"/OQ3.gif height=32 width=32><img src="+DirTile+"/BLANK.gif height=32 width=16>";
   t=t+"<img src="+DirItem+"/OQ3.gif height=32 width=32><img src="+DirTile+"/BLANK.gif height=32 width=16>";
   t=t+"<img src="+DirItem+"/OQ3.gif height=32 width=32><img src="+DirTile+"/BLANK.gif height=32 width=16>";
   t=t+"<img src="+DirItem+"/OQ4.gif height=32 width=32><img src="+DirTile+"/BLANK.gif height=32 width=16>";
   t=t+"<img src="+DirItem+"/OQ4.gif height=32 width=32><img src="+DirTile+"/BLANK.gif height=32 width=8>";
   POP(t);
  } else {
   c=0;
   if (CharMap=="E4e") { c=65; d=70; e="Q3"; }
   if (CharMap=="C7") { c=70; d=75; e="Q4"; }
   if (c) {
    for (i=c; i<d; i++) {
     t=t+"<a href=javascript:Null(); onmousedown=javascript:CLOTHES(\""+String.fromCharCode(i)+"\");><img src="+DirChar+"/CHR"+b+String.fromCharCode(i)+"R.gif border=0 height=48 width=48></a>";
    }
    t=t+"<br>";
    for (i=c; i<d; i++) {
     t=t+"<img src="+DirItem+"/O"+e+".gif height=32 width=32><img src="+DirTile+"/BLANK.gif height=32 width=16>";
    }
   }
   POP(t);
  }
 } else {
  HPOP();
  ToDo="C=C&J="+InitalObj.substring(0,2)+a;
 }
}  



//Map-menu
function MenuID(a) { switch (a) {
  case "L": return "Wear "; break;
  case "S": return "Display "; break;
}}



// Map-view
function AdminTileMode(i) {
  var screen=CharMapObj==screenW?3:CharMapObj==screenV?2:CharMapObj==screenU?1:0;
  NewTile=Tileset[screen].charAt(CharZ*2);
  NewSubTile=Tileset[screen].charAt((CharZ*2)+1);
  if (TileFill) { NewTile=TileFill.charAt(0); NewSubTile=TileFill.charAt(1); }
  if (i>64 && i<91) {
    if (Shifted || ShiftSet) {
      NewTile=String.fromCharCode(+i);
    } else {
      NewSubTile=String.fromCharCode(i+32);
    }
  }
  Tileset[screen]=Tileset[screen].substring(0,(CharZ*2))+NewTile+NewSubTile+Tileset[screen].substring((CharZ*2)+2);
  CharMapObj.childNodes[CharZ].setAttribute("src",DirTile+'/'+NewTile+NewSubTile+'.png');
  ToDo="tile&j="+NewTile+NewSubTile;
  if (i==13) {
    TileMode=0; TileFill="";
  } else {
    if (TileFill) { TileFill=NewTile+NewSubTile; }
  }
}





</script>
<!--script src="[htmlurl]/11-gfx/client-chat.js" language="JavaScript"></script>
<script src="[htmlurl]/11-gfx/client-view.js" language="JavaScript"></script-->
</body>
</html>
